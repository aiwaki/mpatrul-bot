import { Scenes } from 'telegraf';
import { fmt, bold } from 'telegraf/format';
import { fetchToken } from '../../database/api';
import { getMyProfile } from '../../services/profiles';

export const meWizard = new Scenes.WizardScene<Scenes.WizardContext>(
    'me',
    async (ctx) => {
        const chatId = ctx.chat?.id;
        if (!chatId) {
            await ctx.sendChatAction('typing');
            await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞.');
            return ctx.scene.leave();
        }

        try {
            const token = await fetchToken(chatId)
            if (!token) {
                await ctx.sendChatAction('typing');
                await ctx.reply('‚ö†Ô∏è –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç.');
                return ctx.scene.leave();
            }

            const response = await getMyProfile(undefined, chatId);
            if (response.error) throw new Error(response.error);
            const data = response.data;

            const message = fmt`
üìù ${bold('–ö–∞—Ä—Ç–æ—á–∫–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞')}

üë§ ${bold('–ò–º—è')}: ${data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìÖ ${bold('–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')}: ${new Date(data.createdAt).toLocaleString()}
‚úîÔ∏è ${bold('–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω')}: ${data.isVerify ? '–î–∞' : '–ù–µ—Ç'}
üíº ${bold('–û–ø—ã—Ç')}: ${data.experience}
üè¢ ${bold('–û—Ç—Ä—è–¥')}: ${data.parent?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
            `;

            await ctx.sendChatAction('typing');
            await ctx.reply(message);
        } catch (error) {
            await ctx.sendChatAction('typing');
            await ctx.reply('üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.');
        }

        return ctx.scene.leave();
    }
);
