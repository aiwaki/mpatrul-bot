import { Scenes } from "telegraf";
import { fmt, bold } from "telegraf/format";
import { getLinkStats } from "../../database/links";

export const statsWizard = new Scenes.WizardScene<Scenes.WizardContext>(
  "stats",
  async (ctx) => {
    const chatId = ctx.chat?.id;
    if (!chatId) {
      await ctx.sendChatAction("typing");
      await ctx.reply("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞.");
      return ctx.scene.leave();
    }

    try {
      const [allTimeStats, dailyStats, weeklyStats, monthlyStats] =
        await Promise.all([
          getLinkStats("all"),
          getLinkStats("day"),
          getLinkStats("week"),
          getLinkStats("month"),
        ]);

      const message = fmt`
üìä ${bold("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫")}

üìà ${bold("–í—Å–µ–≥–æ")}: ${allTimeStats.count}
üî• ${bold("–î–µ–Ω—å")}: ${dailyStats.count}
‚ö° ${bold("–ù–µ–¥–µ–ª—è")}: ${weeklyStats.count}
üåü ${bold("–ú–µ—Å—è—Ü")}: ${monthlyStats.count}
      `;

      await ctx.sendChatAction("typing");
      await ctx.reply(message);
    } catch (error) {
      console.error("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—Å—ã–ª–æ–∫:", error);

      await ctx.sendChatAction("typing");
      await ctx.reply("üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
    }

    return ctx.scene.leave();
  }
);
